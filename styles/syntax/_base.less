// Language syntax highlighting

.syntax--comment {
  color: @syntax-color-comment;
  font-style: italic;

  .syntax--markup.syntax--link {
    color: @syntax-color-comment;
  }
}

.syntax--keyword {
  color: @syntax-color-keyword;

  &.syntax--control {
    color: @syntax-color-control;
  }

  &.syntax--operator {
    color: @syntax-color-operator;
  }

  &.syntax--other.syntax--special-method {
    color: @syntax-color-operator;
  }

  &.syntax--other.syntax--unit {
    color: @syntax-color-constant;
  }
}

.syntax--storage {
  color: @syntax-color-storage;

  &.syntax--type {
    &.syntax--annotation,
    &.syntax--primitive {
      color: @syntax-color-storage;
    }
  }

  &.syntax--modifier {
    &.syntax--package,
    &.syntax--import {
      color: @syntax-text-color;
    }
  }
}

.syntax--constant {
  color: @syntax-color-constant;

  &.syntax--variable {
    color: @syntax-color-constant;
  }

  &.syntax--character.syntax--escape {
    color: @syntax-color-escape;
  }

  &.syntax--numeric {
    color: @syntax-color-constant;
  }

  &.syntax--other.syntax--color {
    color: @syntax-color-symbol;
  }

  &.syntax--other.syntax--symbol {
    color: @syntax-color-symbol;
  }

  &.syntax--other.syntax--placeholder {
    color: @syntax-color-placeholder;
  }
}

.syntax--variable {
  color: @syntax-color-variable;

  &.syntax--interpolation {
    color: @hue-5-2; // PASS
  }

  &.syntax--parameter {
    color: @syntax-color-parameter;
  }

  &.syntax--language {
    color: @syntax-color-support;
  }

  &.syntax--other.syntax--property {
    color: @syntax-color-variable;
  }

  &.syntax--other.syntax--object {
    color: @syntax-text-color;
  }
}

.syntax--string {
  color: @syntax-color-string;


  &.syntax--regexp {
    color: @syntax-color-regex;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @hue-6-2; // PASS
    }
  }

  &.syntax--other.syntax--link {
    color: @hue-5; // PASS
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @syntax-color-comment;
    }

    &.syntax--method-parameters,
    &.syntax--function-parameters,
    &.syntax--parameters,
    &.syntax--separator,
    &.syntax--seperator,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @hue-2; // PASS
    }

    &.syntax--bold {
      color: @hue-6-2; // PASS
      font-weight: bold; // PASS
    }

    &.syntax--italic {
      color: @hue-3; // PASS
      font-style: italic; // PASS
    }

    &.syntax--keyword {
      color: @syntax-color-keyword;
    }
  }

  &.syntax--section {
    &.syntax--embedded {
      color: @hue-5-2; // PASS
    }

    &.syntax--method,
    &.syntax--class,
    &.syntax--inner-class {
      color: @syntax-text-color;
    }
  }

  &.syntax--bracket {
    color: @syntax-text-color;
  }

  &.syntax--separator {
    color: @syntax-color-operator;
  }
}

.syntax--support {
  &.syntax--class {
    color: @syntax-color-type;
  }

  &.syntax--type {
    color: @syntax-color-support;
  }

  &.syntax--function  {
    color: @syntax-color-support;

    &.syntax--any-method {
      color: @syntax-color-support;
    }
  }

  &.syntax--variable {
    color: @syntax-color-support;
  }
}

.syntax--entity {
  &.syntax--name.syntax--type {
    color: @syntax-color-class;
  }

  &.syntax--other.syntax--inherited-class {
    color: @syntax-color-inherited;
  }

  &.syntax--name.syntax--function {
    color: @syntax-color-function;
  }

  &.syntax--name.syntax--class,
  &.syntax--name.syntax--type.syntax--class {
    color: @syntax-color-class;
  }

  &.syntax--name.syntax--section {
    color: @hue-2; // PASS
  }

  &.syntax--name.syntax--tag {
    color: @syntax-color-tag;
  }

  &.syntax--other.syntax--attribute-name {
    color: @syntax-color-attribute;

    &.syntax--id {
      color: @syntax-color-attribute-id;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @syntax-color-class;

    &.syntax--body {
      color: @syntax-text-color;
    }
  }

  &.syntax--method-call,
  &.syntax--method {
    color: @syntax-text-color;
  }

  &.syntax--definition {
    &.syntax--variable {
      color: @syntax-text-color;
    }
  }

  &.syntax--link {
    color: @hue-6; // PASS
  }

  &.syntax--require {
    // require 'rubygems'
    color: @syntax-color-import;
  }

  &.syntax--selector {
    color: @syntax-text-color;
  }

  &.syntax--separator {
    background-color: #373b41; // PASS
    color: @mono-1; // PASS
  }

  &.syntax--tag {
    color: @syntax-text-color;
  }

  &.syntax--annotation {
    color: @syntax-color-annotation;
  }
}

.syntax--underline {
  text-decoration: underline;
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--invalid {
  &.syntax--deprecated {
    color: @syntax-deprecated-fg !important;
    background-color: @syntax-deprecated-bg !important;
  }
  &.syntax--illegal {
    color: @syntax-illegal-fg !important;
    background-color: @syntax-illegal-bg !important;
  }
}

// Languages -------------------------------------------------

.syntax--markup {
  &.syntax--bold {
    color: @syntax-markup-bold;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @syntax-markup-changed;
  }

  &.syntax--deleted {
    color: @syntax-markup-deleted;
  }

  &.syntax--italic {
    color: @syntax-markup-italic;
    font-style: italic;
  }

  &.syntax--heading {
    color: @syntax-markup-heading;

    .syntax--punctuation.syntax--definition.syntax--heading {
      color: @hue-2; // PASS
    }
  }

  &.syntax--link {
    color: @syntax-markup-link;
  }

  &.syntax--inserted {
    color: @syntax-markup-inserted;
  }

  &.syntax--quote {
    color: @syntax-markup-quote;
  }

  &.syntax--raw {
    color: @syntax-markup-raw;
  }

  &.syntax--strike {
    color: @syntax-markup-strike;
    text-decoration: line-through;
  }
}
